<?xml version="1.0"?>
<root xmlns:xacro="http://ros.org/wiki/xacro">

	<!--Data taken from http://wiki.ros.org/velodyne_description-->
	<xacro:macro 
		name="velodyne_sensor" 
		params="
		link_name 
		frame_name 
		lidar_name   
        topic:=/velodyne_points 
        organize_cloud:=false 
        hz:=10 
        lasers:=16 
        samples:=1875 
        collision_range:=0.3 
        min_range:=0.9 
        max_range:=130.0 
        noise:=0.008 
        min_angle:=-${M_PI} 
        max_angle:=${M_PI} 
        gpu:=false">
		<gazebo reference="${link_name}">
			<xacro:if value="${gpu}">
				<sensor type="gpu_ray" name="${name}-VLP16">
					<pose>0 0 0 0 0 0</pose>
					<visualize>false</visualize>
					<update_rate>${hz}</update_rate>
					<ray>
						<scan>
							<horizontal>
								<samples>${samples}</samples>
								<resolution>1</resolution>
								<min_angle>${min_angle}</min_angle>
								<max_angle>${max_angle}</max_angle>
							</horizontal>
							<vertical>
								<samples>${lasers}</samples>
								<resolution>1</resolution>
								<min_angle>-${15.0*M_PI/180.0}</min_angle>
								<max_angle> ${15.0*M_PI/180.0}</max_angle>
							</vertical>
						</scan>
						<range>
							<min>${collision_range}</min>
							<max>${max_range+1}</max>
							<resolution>0.001</resolution>
						</range>
						<noise>
							<type>gaussian</type>
							<mean>0.0</mean>
							<stddev>0.0</stddev>
						</noise>
					</ray>
					<plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
						<topicName>${topic}</topicName>
						<frameName>${frame_name}</frameName>
						<organize_cloud>${organize_cloud}</organize_cloud>
						<min_range>${min_range}</min_range>
						<max_range>${max_range}</max_range>
						<gaussianNoise>${noise}</gaussianNoise>
						<!--<alwaysOn>false</alwaysOn>--> <!--I'm not sure about it-->
					</plugin>
				</sensor>
      		</xacro:if>
     		<xacro:unless value="${gpu}">
				<sensor type="ray" name="${name}-VLP16">
					<pose>0 0 0 0 0 0</pose>
					<visualize>false</visualize>
					<update_rate>${hz}</update_rate>
					<always_on>false</always_on>
					<ray>
						<scan>
							<horizontal>
								<samples>${samples}</samples>
								<resolution>1</resolution>
								<min_angle>${min_angle}</min_angle>
								<max_angle>${max_angle}</max_angle>
							</horizontal>
							<vertical>
								<samples>${lasers}</samples>
								<resolution>1</resolution>
								<min_angle>-${15.0*M_PI/180.0}</min_angle>
								<max_angle> ${15.0*M_PI/180.0}</max_angle>
							</vertical>
						</scan>
						<range>
							<min>${collision_range}</min>
							<max>${max_range+1}</max>
							<resolution>0.001</resolution>
						</range>
						<noise>
							<type>gaussian</type>
							<mean>0.0</mean>
							<stddev>0.0</stddev>
						</noise>
					</ray>
					<plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
						<topicName>${topic}</topicName>
						<frameName>${frame_name}</frameName>
						<organize_cloud>${organize_cloud}</organize_cloud>
						<min_range>${min_range}</min_range>
						<max_range>${max_range}</max_range>
						<gaussianNoise>${noise}</gaussianNoise>
						<!--<alwaysOn>false</alwaysOn>--> <!--I'm not sure about it-->
					</plugin>
				</sensor>
     		</xacro:unless>
		</gazebo>
	</xacro:macro>
</root>